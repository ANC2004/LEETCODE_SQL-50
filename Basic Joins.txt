1)Replace Employee ID With The Unique Identifier

SELECT e.name, eu.unique_id
FROM Employees e
LEFT JOIN EmployeeUNI eu
ON e.id = eu.id;


2)Product Sales Analysis I

SELECT product_name, year, price
FROM Sales NATURAL JOIN Product;


3)Customer Who Visited but Did Not Make Any Transactions

SELECT v.customer_id, COUNT(v.visit_id) AS count_no_trans
FROM Visits v
LEFT JOIN Transactions t
ON v.visit_id = t.visit_id
WHERE t.visit_id IS NULL
GROUP BY v.customer_id;


4)Rising Temperature

SELECT w1.id
FROM Weather w1, Weather w2
WHERE w1.recordDate - w2.recordDate = 1 AND w1.temperature > w2.temperature;


5)Average Time of Process per Machine

SELECT 
    a.machine_id,
    ROUND(AVG(b.timestamp - a.timestamp), 3) AS processing_time
FROM 
    Activity a
JOIN 
    Activity b
    ON a.machine_id = b.machine_id 
    AND a.process_id = b.process_id 
    AND a.activity_type = 'start'
    AND b.activity_type = 'end'
GROUP BY 
    a.machine_id;


6)Employee Bonus

SELECT E.name, B.bonus
FROM Employee E
LEFT JOIN Bonus B ON E.empId = B.empId
WHERE B.bonus < 1000 OR B.bonus IS NULL;


7)Students and Examinations

SELECT 
    s.student_id,s.student_name,sub.subject_name,
    COUNT(e.subject_name) AS attended_exams
FROM 
    Students s
CROSS JOIN 
    Subjects sub
LEFT JOIN 
    Examinations e
    ON s.student_id = e.student_id AND sub.subject_name = e.subject_name
GROUP BY 
    s.student_id, s.student_name, sub.subject_name
ORDER BY 
    s.student_id, sub.subject_name;


8)Managers with at Least 5 Direct Reports

SELECT e1.name
FROM Employee e1
JOIN Employee e2 ON e1.id = e2.managerId
GROUP BY e1.id, e1.name
HAVING COUNT(e2.managerId) >= 5;


9)Confirmation Rate

SELECT s.user_id, 
ROUND(AVG(CASE WHEN c.action = 'confirmed' THEN 1 ELSE 0 END), 2) AS confirmation_rate
FROM Signups s
LEFT JOIN Confirmations c ON s.user_id = c.user_id
GROUP BY s.user_id;